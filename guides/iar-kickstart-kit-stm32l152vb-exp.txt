IAR Kickstart kit STM32L152VB-EXP with magnetometer
===================================================
#install OpenOCD
sudo pacman -S openocd

#make sure that J-Link Lite device is connected and identified
lsusb
#result contains line like
## Bus 007 Device 002: ID 1366:0101 SEGGER J-Link PLUS

#instal udev rules
sudo cp /usr/share/openocd/contrib/99-openocd.rules /etc/udev/rules.d/
#add group plugdev
groupadd plugdev
#add user into plugdev group
sudo usermod -aG plugdev petras

#check openocd functionality with J-Link Lite
openocd -f interface/jlink.cfg -f target/stm32l1.cfg
## result like:
## Open On-Chip Debugger 0.9.0 (2015-05-19-13:50)
## Licensed under GNU GPL v2
## For bug reports, read
## 	http://openocd.org/doc/doxygen/bugs.html
## Info : auto-selecting first available session transport "jtag". To override use 'transport select <transport>'.
## adapter speed: 300 kHz
## adapter_nsrst_delay: 100
## jtag_ntrst_delay: 100
## none separate
## cortex_m reset_config sysresetreq
## Info : J-Link ARM Lite V8 compiled Oct 29 2014 09:03:16
## Info : J-Link caps 0xb9ff7bbf
## Info : J-Link hw version 80000
## Info : J-Link hw type J-Link
## Info : J-Link max mem block 9328
## Info : J-Link configuration
## Info : USB-Address: 0x0
## Info : Kickstart power on JTAG-pin 19: 0xffffff01
## Info : Vref = 3.313 TCK = 0 TDI = 1 TDO = 1 TMS = 1 SRST = 1 TRST = 1
## Info : J-Link JTAG Interface ready
## Info : clock speed 300 kHz
## Info : JTAG tap: stm32l1.cpu tap/device found: 0x4ba00477 (mfg: 0x23b, part: 0xba00, ver: 0x4)
## Info : JTAG tap: stm32l1.bs tap/device found: 0x06416041 (mfg: 0x020, part: 0x6416, ver: 0x0)
## Info : stm32l1.cpu: hardware has 6 breakpoints, 4 watchpoints
 
# make configuration file for openocd and store in ~/.openocd/openocd.cfg:
==================================
source [find interface/jlink.cfg]

# GDB can also flash my flash!

gdb_memory_map enable
gdb_flash_program enable

source [find target/stm32l1.cfg]
==================================

sudo pacman -S arm-none-eabi-gcc

====== from Atollic Studio ========================================
#assembler:
command: arm-atollic-eabi-gcc -c
all options: -mthumb -mcpu=cortex-m3 -g -Wa,--warn -x assembler-with-cpp
# floating point: software implementation

#C Compiler:
command: arm-atollic-eabi-gcc -c
all options: -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall
# floating point: software implementation
# defined symbols: 
		USE_STM32L152_EVAL
		USE_DEFAULT_TIMEOUT_CALLBACK
		STM32L1XX_MD
		USE_STDPERIPH_DRIVER

#C linker:
command: arm-atollic-eabi-gcc
all options: -mthumb -mcpu=cortex-m3 -T"..\stm32_flash.ld" -Wl,--start-group -lc -lm -Wl,--end-group -static -Wl,-cref,-u,Reset_Handler "-Wl,-Map=${BuildArtifactFileBaseName}.map" -Wl,--gc-sections -Wl,--defsym=malloc_getpagesize_P=0x1000

=====Atollic studio build log ====================================================================
14:12:24 **** Rebuild of configuration Debug for project STM32L152-EVAL_GPIO_IOToggle ****
Info: Internal Builder is used for build
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_lcd.o ..\Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_lcd.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_usart.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_usart.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Utilities\STM32_EVAL\Common\fonts.o ..\Utilities\STM32_EVAL\Common\fonts.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\misc.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\misc.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_dbgmcu.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_dbgmcu.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -g -Wa,--warn -x assembler-with-cpp -o src\startup_stm32l1xx_md.o ..\src\startup_stm32l1xx_md.s 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_exti.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_exti.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_lcd.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_lcd.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_opamp.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_opamp.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_i2c_ee.o ..\Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_i2c_ee.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o src\main.o ..\src\main.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_i2c_tsensor.o ..\Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_i2c_tsensor.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_sdio.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_sdio.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_comp.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_comp.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_adc.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_adc.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Utilities\STM32_EVAL\Common\lcd_log.o ..\Utilities\STM32_EVAL\Common\lcd_log.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_i2c.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_i2c.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_flash.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_flash.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_syscfg.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_syscfg.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o src\system_stm32l1xx.o ..\src\system_stm32l1xx.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_tim.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_tim.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_rtc.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_rtc.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o src\tiny_printf.o ..\src\tiny_printf.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_aes.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_aes.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval.o ..\Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_glass_lcd.o ..\Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_glass_lcd.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o src\stm32l1xx_it.o ..\src\stm32l1xx_it.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_aes_util.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_aes_util.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_spi.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_spi.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o src\syscalls.o ..\src\syscalls.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_dac.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_dac.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_gpio.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_gpio.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_dma.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_dma.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_wwdg.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_wwdg.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_flash_ramfunc.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_flash_ramfunc.c 
C:\Users\FALTYN~1.ZAK\AppData\Local\Temp\ccDqtbNO.s: Assembler messages:
C:\Users\FALTYN~1.ZAK\AppData\Local\Temp\ccDqtbNO.s:18: Warning: ignoring changed section attributes for .data
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_iwdg.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_iwdg.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_fsmc.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_fsmc.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_rcc.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_rcc.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_crc.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_crc.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_spi_sd.o ..\Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_spi_sd.c 
arm-atollic-eabi-gcc -c -mthumb -mcpu=cortex-m3 -std=gnu90 -DUSE_STM32L152_EVAL -DUSE_DEFAULT_TIMEOUT_CALLBACK -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -I../src -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Utilities\STM32_EVAL\Common -I..\Utilities\STM32_EVAL\STM32L152_EVAL -O0 -ffunction-sections -fdata-sections -g -Wall -o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_pwr.o ..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_pwr.c 
arm-atollic-eabi-gcc src\tiny_printf.o src\system_stm32l1xx.o src\syscalls.o src\stm32l1xx_it.o src\startup_stm32l1xx_md.o src\main.o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_spi_sd.o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_lcd.o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_i2c_tsensor.o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_i2c_ee.o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_glass_lcd.o Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval.o Utilities\STM32_EVAL\Common\lcd_log.o Utilities\STM32_EVAL\Common\fonts.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_wwdg.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_usart.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_tim.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_syscfg.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_spi.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_sdio.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_rtc.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_rcc.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_pwr.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_opamp.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_lcd.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_iwdg.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_i2c.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_gpio.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_fsmc.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_flash_ramfunc.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_flash.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_exti.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_dma.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_dbgmcu.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_dac.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_crc.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_comp.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_aes_util.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_aes.o Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_adc.o Libraries\STM32L1xx_StdPeriph_Driver\src\misc.o -lm -o STM32L152-EVAL_GPIO_IOToggle.elf -mthumb -mcpu=cortex-m3 -T..\stm32_flash.ld -Wl,--start-group -lc -lm -Wl,--end-group -static -Wl,-cref,-u,Reset_Handler -Wl,-Map=STM32L152-EVAL_GPIO_IOToggle.map -Wl,--gc-sections -Wl,--defsym=malloc_getpagesize_P=0x1000 
C:\Program Files (x86)\Atollic\TrueSTUDIO for ARM 5.4.0\ide\jre\bin\java -jar C:\Program Files (x86)\Atollic\TrueSTUDIO for ARM 5.4.0\Tools\arm-atollic-reports.jar sizeinfo STM32L152-EVAL_GPIO_IOToggle.elf 
Generate build reports...
Print size information
   text	   data	    bss	    dec	    hex	filename
   2080	     12	    176	   2268	    8dc	STM32L152-EVAL_GPIO_IOToggle.elf
Print size information done
Generate build reports done

14:13:00 Build Finished (took 35s.995ms)
=================================================================================
===== content of file 'stm32_flash.ld' - autogenerated for test project =========
/*
*****************************************************************************
**
**  File        : stm32_flash.ld
**
**  Abstract    : Linker script for STM32L152VB Device with
**                128KByte FLASH, 16KByte RAM
**
**                Set heap size, stack size and stack location according
**                to application requirements.
**
**                Set memory bank area and size if external memory is used.
**
**  Target      : STMicroelectronics STM32
**
**  Environment : Atollic TrueSTUDIO(R)
**
**  Distribution: The file is distributed “as is,” without any warranty
**                of any kind.
**
**  (c)Copyright Atollic AB.
**  You may use this file as-is or modify it according to the needs of your
**  project. Distribution of this file (unmodified or modified) is not
**  permitted. Atollic AB permit registered Atollic TrueSTUDIO(R) users the
**  rights to distribute the assembled, compiled & linked contents of this
**  file as part of an application binary file, provided that it is built
**  using the Atollic TrueSTUDIO(R) toolchain.
**
*****************************************************************************
*/

/* Entry Point */
ENTRY(Reset_Handler)

/* Highest address of the user mode stack */
_estack = 0x20004000;    /* end of 16K RAM */

/* Generate a link error if heap and stack don't fit into RAM */
_Min_Heap_Size = 0;      /* required amount of heap  */
_Min_Stack_Size = 0x80; /* required amount of stack */

/* Specify the memory areas */
MEMORY
{
  FLASH (rx)      : ORIGIN = 0x08000000, LENGTH = 128K
  RAM (xrw)       : ORIGIN = 0x20000000, LENGTH = 16K
  MEMORY_B1 (rx)  : ORIGIN = 0x60000000, LENGTH = 0K
}

/* Define output sections */
SECTIONS
{
  /* The startup code goes first into FLASH */
  .isr_vector :
  {
    . = ALIGN(4);
    KEEP(*(.isr_vector)) /* Startup code */
    . = ALIGN(4);
  } >FLASH

  /* The program code and other data goes into FLASH */
  .text :
  {
    . = ALIGN(4);
    *(.text)           /* .text sections (code) */
    *(.text*)          /* .text* sections (code) */
    *(.rodata)         /* .rodata sections (constants, strings, etc.) */
    *(.rodata*)        /* .rodata* sections (constants, strings, etc.) */
    *(.glue_7)         /* glue arm to thumb code */
    *(.glue_7t)        /* glue thumb to arm code */
    *(.eh_frame)

    KEEP (*(.init))
    KEEP (*(.fini))

    . = ALIGN(4);
    _etext = .;        /* define a global symbols at end of code */
  } >FLASH


   .ARM.extab   : { *(.ARM.extab* .gnu.linkonce.armextab.*) } >FLASH
    .ARM : {
    __exidx_start = .;
      *(.ARM.exidx*)
      __exidx_end = .;
    } >FLASH

  .preinit_array     :
  {
    PROVIDE_HIDDEN (__preinit_array_start = .);
    KEEP (*(.preinit_array*))
    PROVIDE_HIDDEN (__preinit_array_end = .);
  } >FLASH
  .init_array :
  {
    PROVIDE_HIDDEN (__init_array_start = .);
    KEEP (*(SORT(.init_array.*)))
    KEEP (*(.init_array*))
    PROVIDE_HIDDEN (__init_array_end = .);
  } >FLASH
  .fini_array :
  {
    PROVIDE_HIDDEN (__fini_array_start = .);
    KEEP (*(SORT(.fini_array.*)))
    KEEP (*(.fini_array*))
    PROVIDE_HIDDEN (__fini_array_end = .);
  } >FLASH

  /* used by the startup to initialize data */
  _sidata = LOADADDR(.data);

  /* Initialized data sections goes into RAM, load LMA copy after code */
  .data : 
  {
    . = ALIGN(4);
    _sdata = .;        /* create a global symbol at data start */
    *(.data)           /* .data sections */
    *(.data*)          /* .data* sections */

    . = ALIGN(4);
    _edata = .;        /* define a global symbol at data end */
  } >RAM AT> FLASH

  /* Uninitialized data section */
  . = ALIGN(4);
  .bss :
  {
    /* This is used by the startup in order to initialize the .bss secion */
    _sbss = .;         /* define a global symbol at bss start */
    __bss_start__ = _sbss;
    *(.bss)
    *(.bss*)
    *(COMMON)

    . = ALIGN(4);
    _ebss = .;         /* define a global symbol at bss end */
    __bss_end__ = _ebss;
  } >RAM

  /* User_heap_stack section, used to check that there is enough RAM left */
  ._user_heap_stack :
  {
    . = ALIGN(4);
    PROVIDE ( end = . );
    PROVIDE ( _end = . );
    . = . + _Min_Heap_Size;
    . = . + _Min_Stack_Size;
    . = ALIGN(4);
  } >RAM

  /* MEMORY_bank1 section, code must be located here explicitly            */
  /* Example: extern int foo(void) __attribute__ ((section (".mb1text"))); */
  .memory_b1_text :
  {
    *(.mb1text)        /* .mb1text sections (code) */
    *(.mb1text*)       /* .mb1text* sections (code)  */
    *(.mb1rodata)      /* read-only data (constants) */
    *(.mb1rodata*)
  } >MEMORY_B1

  /* Remove information from the standard libraries */
  /DISCARD/ :
  {
    libc.a ( * )
    libm.a ( * )
    libgcc.a ( * )
  }

  .ARM.attributes 0 : { *(.ARM.attributes) }
} 
==========================================================================
==== manually generated ld script 'STM32L152VB_FLASH.ld' =================
/*
*****************************************************************************
**
**  File        : stm32_flash.ld
**
**  Abstract    : Linker script for STM32L152VB Device with
**                128KByte FLASH, 16KByte RAM
**
**                Set heap size, stack size and stack location according
**                to application requirements.
**
**                Set memory bank area and size if external memory is used.
**
**  Target      : STMicroelectronics STM32
**
**  Environment : Atollic TrueSTUDIO(R)
**
**  Distribution: The file is distributed "as is", without any warranty
**                of any kind.
**
**  (c)Copyright Atollic AB.
**  You may use this file as-is or modify it according to the needs of your
**  project. This file may only be built (assembled or compiled and linked)
**  using the Atollic TrueSTUDIO(R) product. The use of this file together
**  with other tools than Atollic TrueSTUDIO(R) is not permitted.
**
*****************************************************************************
*/

/* Entry Point */
ENTRY(Reset_Handler)

/* Highest address of the user mode stack */
_estack = 0x20004000;    /* end of 16K RAM */

/* Generate a link error if heap and stack don't fit into RAM */
_Min_Heap_Size = 0;      /* required amount of heap  */
_Min_Stack_Size = 0x80; /* required amount of stack */

/* Specify the memory areas */
MEMORY
{
  FLASH (rx)      : ORIGIN = 0x08000000, LENGTH = 128K
  RAM (xrw)       : ORIGIN = 0x20000000, LENGTH = 16K
  MEMORY_B1 (rx)  : ORIGIN = 0x60000000, LENGTH = 0K
}

/* Define output sections */
SECTIONS
{
  /* The startup code goes first into FLASH */
  .isr_vector :
  {
    . = ALIGN(4);
    KEEP(*(.isr_vector)) /* Startup code */
    . = ALIGN(4);
  } >FLASH

  /* The program code and other data goes into FLASH */
  .text :
  {
    . = ALIGN(4);
    *(.text)           /* .text sections (code) */
    *(.text*)          /* .text* sections (code) */
    *(.glue_7)         /* glue arm to thumb code */
    *(.glue_7t)        /* glue thumb to arm code */
    *(.eh_frame)

    KEEP (*(.init))
    KEEP (*(.fini))

    . = ALIGN(4);
    _etext = .;        /* define a global symbols at end of code */
  } >FLASH

  /* Constant data goes into FLASH */
  .rodata :
  {
    . = ALIGN(4);
    *(.rodata)         /* .rodata sections (constants, strings, etc.) */
    *(.rodata*)        /* .rodata* sections (constants, strings, etc.) */
    . = ALIGN(4);
  } >FLASH

  .ARM.extab   : { *(.ARM.extab* .gnu.linkonce.armextab.*) } >FLASH
  .ARM : {
    __exidx_start = .;
    *(.ARM.exidx*)
    __exidx_end = .;
  } >FLASH

  .preinit_array     :
  {
    PROVIDE_HIDDEN (__preinit_array_start = .);
    KEEP (*(.preinit_array*))
    PROVIDE_HIDDEN (__preinit_array_end = .);
  } >FLASH
  .init_array :
  {
    PROVIDE_HIDDEN (__init_array_start = .);
    KEEP (*(SORT(.init_array.*)))
    KEEP (*(.init_array*))
    PROVIDE_HIDDEN (__init_array_end = .);
  } >FLASH
  .fini_array :
  {
    PROVIDE_HIDDEN (__fini_array_start = .);
    KEEP (*(SORT(.fini_array.*)))
    KEEP (*(.fini_array*))
    PROVIDE_HIDDEN (__fini_array_end = .);
  } >FLASH

  /* used by the startup to initialize data */
  _sidata = LOADADDR(.data);

  /* Initialized data sections goes into RAM, load LMA copy after code */
  .data : 
  {
    . = ALIGN(4);
    _sdata = .;        /* create a global symbol at data start */
    *(.data)           /* .data sections */
    *(.data*)          /* .data* sections */

    . = ALIGN(4);
    _edata = .;        /* define a global symbol at data end */
  } >RAM AT> FLASH

  /* Uninitialized data section */
  . = ALIGN(4);
  .bss :
  {
    /* This is used by the startup in order to initialize the .bss secion */
    _sbss = .;         /* define a global symbol at bss start */
    __bss_start__ = _sbss;
    *(.bss)
    *(.bss*)
    *(COMMON)

    . = ALIGN(4);
    _ebss = .;         /* define a global symbol at bss end */
    __bss_end__ = _ebss;
  } >RAM

  /* User_heap_stack section, used to check that there is enough RAM left */
  ._user_heap_stack :
  {
    . = ALIGN(4);
    PROVIDE ( end = . );
    PROVIDE ( _end = . );
    . = . + _Min_Heap_Size;
    . = . + _Min_Stack_Size;
    . = ALIGN(4);
  } >RAM

  /* MEMORY_bank1 section, code must be located here explicitly            */
  /* Example: extern int foo(void) __attribute__ ((section (".mb1text"))); */
  .memory_b1_text :
  {
    *(.mb1text)        /* .mb1text sections (code) */
    *(.mb1text*)       /* .mb1text* sections (code)  */
    *(.mb1rodata)      /* read-only data (constants) */
    *(.mb1rodata*)
  } >MEMORY_B1

  /* Remove information from the standard libraries */
  /DISCARD/ :
  {
    libc.a ( * )
    libm.a ( * )
    libgcc.a ( * )
  }

  .ARM.attributes 0 : { *(.ARM.attributes) }
} ==========================================================================
==== manually generated ld script 'STM32L152VB_RAM.ld' ===================
/*
*****************************************************************************
**
**  File        : stm32_ram.ld
**
**  Abstract    : Linker script for STM32L152VB Device with
**                128KByte FLASH, 16KByte RAM
**
**                Set heap size, stack size and stack location according
**                to application requirements.
**
**                Set memory bank area and size if external memory is used.
**
**  Target      : STMicroelectronics STM32
**
**  Environment : Atollic TrueSTUDIO(R)
**
**  Distribution: The file is distributed "as is", without any warranty
**                of any kind.
**
**  (c)Copyright Atollic AB.
**  You may use this file as-is or modify it according to the needs of your
**  project. This file may only be built (assembled or compiled and linked)
**  using the Atollic TrueSTUDIO(R) product. The use of this file together
**  with other tools than Atollic TrueSTUDIO(R) is not permitted.
**
*****************************************************************************
*/

/* Entry Point */
ENTRY(Reset_Handler)

/* Highest address of the user mode stack */
_estack = 0x20004000;    /* end of 16K RAM */

/* Generate a link error if heap and stack don't fit into RAM */
_Min_Heap_Size = 0;      /* required amount of heap  */
_Min_Stack_Size = 0x80; /* required amount of stack */

/* Specify the memory areas */
MEMORY
{
  FLASH (rx)      : ORIGIN = 0x08000000, LENGTH = 128K
  RAM (xrw)       : ORIGIN = 0x20000000, LENGTH = 16K
  MEMORY_B1 (rx)  : ORIGIN = 0x60000000, LENGTH = 0K
}

/* Define output sections */
SECTIONS
{
  /* The startup code goes first into RAM */
  .isr_vector :
  {
    . = ALIGN(4);
    KEEP(*(.isr_vector)) /* Startup code */
    . = ALIGN(4);
  } >RAM

  /* The program code and other data goes into RAM */
  .text :
  {
    . = ALIGN(4);
    *(.text)           /* .text sections (code) */
    *(.text*)          /* .text* sections (code) */
    *(.glue_7)         /* glue arm to thumb code */
    *(.glue_7t)        /* glue thumb to arm code */
    *(.eh_frame)

    KEEP (*(.init))
    KEEP (*(.fini))

    . = ALIGN(4);
    _etext = .;        /* define a global symbols at end of code */
  } >RAM

  /* Constant data goes into RAM */
  .rodata :
  {
    . = ALIGN(4);
    *(.rodata)         /* .rodata sections (constants, strings, etc.) */
    *(.rodata*)        /* .rodata* sections (constants, strings, etc.) */
    . = ALIGN(4);
  } >RAM

  .ARM.extab   : { *(.ARM.extab* .gnu.linkonce.armextab.*) } >RAM
  .ARM : {
    __exidx_start = .;
    *(.ARM.exidx*)
    __exidx_end = .;
  } >RAM

  .preinit_array     :
  {
    PROVIDE_HIDDEN (__preinit_array_start = .);
    KEEP (*(.preinit_array*))
    PROVIDE_HIDDEN (__preinit_array_end = .);
  } >RAM
  .init_array :
  {
    PROVIDE_HIDDEN (__init_array_start = .);
    KEEP (*(SORT(.init_array.*)))
    KEEP (*(.init_array*))
    PROVIDE_HIDDEN (__init_array_end = .);
  } >RAM
  .fini_array :
  {
    PROVIDE_HIDDEN (__fini_array_start = .);
    KEEP (*(SORT(.fini_array.*)))
    KEEP (*(.fini_array*))
    PROVIDE_HIDDEN (__fini_array_end = .);
  } >RAM

  /* used by the startup to initialize data */
  _sidata = LOADADDR(.data);
  
  /* Initialized data sections goes into RAM, load LMA copy after code */
  .data : 
  {
    . = ALIGN(4);
    _sdata = .;        /* create a global symbol at data start */
    *(.data)           /* .data sections */
    *(.data*)          /* .data* sections */

    . = ALIGN(4);
    _edata = .;        /* define a global symbol at data end */
  } >RAM

  /* Uninitialized data section */
  . = ALIGN(4);
  .bss :
  {
    /* This is used by the startup in order to initialize the .bss secion */
    _sbss = .;         /* define a global symbol at bss start */
    __bss_start__ = _sbss;
    *(.bss)
    *(.bss*)
    *(COMMON)

    . = ALIGN(4);
    _ebss = .;         /* define a global symbol at bss end */
    __bss_end__ = _ebss;
  } >RAM

  /* User_heap_stack section, used to check that there is enough RAM left */
  ._user_heap_stack :
  {
    . = ALIGN(4);
    PROVIDE ( end = . );
    PROVIDE ( _end = . );
    . = . + _Min_Heap_Size;
    . = . + _Min_Stack_Size;
    . = ALIGN(4);
  } >RAM

  /* MEMORY_bank1 section, code must be located here explicitly            */
  /* Example: extern int foo(void) __attribute__ ((section (".mb1text"))); */
  .memory_b1_text :
  {
    *(.mb1text)        /* .mb1text sections (code) */
    *(.mb1text*)       /* .mb1text* sections (code)  */
    *(.mb1rodata)      /* read-only data (constants) */
    *(.mb1rodata*)
  } >MEMORY_B1

  /* Remove information from the standard libraries */
  /DISCARD/ :
  {
    libc.a ( * )
    libm.a ( * )
    libgcc.a ( * )
  }
  
  .ARM.attributes 0 : { *(.ARM.attributes) }
} 
==========================================================================
